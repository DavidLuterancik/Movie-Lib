{"version":3,"file":"static/js/787.81643719.chunk.js","mappings":"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","sources":["components/favoriteMovie/favoriteMovie.js","components/movieCardDetail/movieCardDetail.js","containers/detail.js"],"sourcesContent":["import React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { regular, solid } from \"@fortawesome/fontawesome-svg-core/import.macro\";\nimport {\n  addToFavorites,\n  removeFromFavorites,\n} from \"../../reducers/favoritesReducer\";\nimport { useTranslation } from \"react-i18next\";\nimport Tippy from \"@tippyjs/react\";\n\nconst FavoriteMovie = ({ id }) => {\n  const { t } = useTranslation();\n\n  const dispatch = useDispatch();\n  const favorites = useSelector((state) => state.favorites.ids);\n\n  const isFavorite = favorites.includes(id);\n\n  const toggleFavorite = (id) => {\n    if (isFavorite) {\n      if (window.confirm(`${t(\"remove_favorite\")}?`)) {\n        dispatch(removeFromFavorites(id));\n      }\n    } else {\n      dispatch(addToFavorites(id));\n    }\n  };\n\n  return (\n    <Tippy content={t(\"add_to_favorite\")}>\n      <FontAwesomeIcon\n        size=\"xl\"\n        className=\"icon\"\n        onClick={() => toggleFavorite(id)}\n        icon={isFavorite ? solid(\"star\") : regular(\"star\")}\n      />\n    </Tippy>\n  );\n};\n\nexport default FavoriteMovie;\n","import { styled, withTheme } from \"styled-components\";\nimport { useTranslation } from \"react-i18next\";\nimport FavoriteMovie from \"../favoriteMovie/favoriteMovie\";\nimport { device } from \"../../themes/baseTheme\";\nimport { Spin } from \"antd\";\n\nfunction getMovieDetails(data, t) {\n  const detailsData = [\n    { label: t(\"actors\"), value: data.Actors },\n    { label: t(\"awards\"), value: data.Awards },\n    { label: t(\"box_office\"), value: data.BoxOffice },\n    { label: t(\"country\"), value: data.Country },\n    { label: t(\"released\"), value: data.DVD },\n    { label: t(\"director\"), value: data.Director },\n    { label: t(\"genre\"), value: data.Genre },\n    { label: t(\"language\"), value: data.Language },\n    { label: t(\"metascore\"), value: data.Metascore },\n    { label: t(\"production\"), value: data.Production },\n    { label: t(\"rated\"), value: data.Rated },\n    { label: t(\"released\"), value: data.Released },\n    { label: t(\"runtime\"), value: data.Runtime },\n    { label: t(\"type\"), value: data.Type },\n    { label: t(\"website\"), value: data.Website },\n    { label: t(\"writer\"), value: data.Writer },\n    { label: t(\"year\"), value: data.Year },\n    { label: t(\"imdb_id\"), value: data.imdbID },\n    { label: t(\"imdb_rating\"), value: data.imdbRating },\n    { label: t(\"imdb_votes\"), value: data.imdbVotes },\n    { label: t(\"plot\"), value: data.Plot },\n  ];\n\n  return (\n    <div>\n      {detailsData.map((item, index) => (\n        <MovieDetails key={index}>\n          <p className=\"label\">{item.label}</p>\n          <p className=\"value\">{item.value}</p>\n        </MovieDetails>\n      ))}\n    </div>\n  );\n}\n\nconst MovieCardDetail = ({ data: d }) => {\n  const { t } = useTranslation();\n\n  if (!d) {\n    return (\n      <MovieCardWrapper skeleton={true}>\n        <MoviePoster skeleton={true}>\n          <Spin />\n        </MoviePoster>\n        <div className=\"info\"></div>\n      </MovieCardWrapper>\n    );\n  }\n\n  return (\n    <MovieCardWrapper>\n      <MoviePoster>\n        <img src={d.Poster} alt={d.Poster} />\n      </MoviePoster>\n\n      <div className=\"info\">\n        <MovieTitle>\n          <div className=\"text\">{d.Title}</div>\n\n          <FavoriteMovie id={d.imdbID} />\n        </MovieTitle>\n\n        <div>{getMovieDetails(d, t)}</div>\n      </div>\n    </MovieCardWrapper>\n  );\n};\n\nconst MovieDetails = styled.div`\n  display: flex;\n  align-items: center;\n  flex-direction: row;\n  width: 100%;\n  margin-bottom: 8px;\n\n  .label {\n    width: 80px;\n    color: ${(props) => props.theme.color.whiteTransparent75};\n    padding-right: 8px;\n    margin-right: 8px;\n    border-right: 1px solid ${(props) => props.theme.color.whiteTransparent75};\n    text-align: right;\n    font-size: 12px;\n    @media ${device.m} {\n      font-size: 14px;\n    }\n  }\n\n  .value {\n    width: 80%;\n    font-size: 14px;\n    @media ${device.m} {\n      font-size: 16px;\n    }\n  }\n`;\n\nconst MoviePoster = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 100%;\n  overflow: hidden;\n  max-width: 512px;\n  min-height: 512px;\n  height: 100%;\n\n  img {\n    width: 100%;\n    height: 100%;\n    object-fit: cover;\n  }\n`;\n\nconst MovieTitle = styled.div`\n  display: flex;\n  flex-direction: row;\n  width: 100%;\n  justify-content: space-between;\n\n  .text {\n    text-transform: uppercase;\n    font-weight: bold;\n    font-size: 24px;\n    margin-bottom: 16px;\n    @media ${device.m} {\n      font-size: 32px;\n      margin-bottom: 48px;\n    }\n  }\n\n  .icon {\n    margin-left: 16px;\n    color: yellow;\n    cursor: pointer;\n  }\n`;\n\nconst MovieCardWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  width: 100%;\n  min-height: 512px;\n  height: 100%;\n\n  @media ${device.m} {\n    flex-direction: row;\n    align-items: flex-start;\n  }\n\n  background-color: ${(props) => props.theme.color.backgroundLite};\n  border-radius: 4px;\n  overflow: hidden;\n\n  .info {\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between;\n\n    padding: 16px;\n\n    @media ${device.m} {\n      width: 100%;\n      padding: 48px;\n    }\n\n    .year {\n      color: ${(props) => props.theme.color.whiteTransparent75};\n      margin-bottom: 8px;\n    }\n\n    .type {\n      text-transform: capitalize;\n      color: ${(props) => props.theme.color.whiteTransparent75};\n    }\n  }\n`;\n\nexport default withTheme(MovieCardDetail);\n","import axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router\";\nimport { withTheme } from \"styled-components\";\nimport MovieCardDetail from \"../components/movieCardDetail/movieCardDetail\";\n\nconst Detail = () => {\n  const { id } = useParams();\n\n  const [data, setData] = useState(null);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const apiUrl = `https://www.omdbapi.com/?apikey=${process.env.REACT_APP_API_KEY}&i=${id}`;\n        const { data } = await axios.get(apiUrl);\n\n        setData(data);\n      } catch (error) {\n        console.error(\"Failed to fetch data\", error);\n      }\n    };\n\n    fetchData();\n  }, [id]);\n\n  return <MovieCardDetail data={data} />;\n};\n\nexport default withTheme(Detail);\n"],"names":["_ref","id","t","useTranslation","dispatch","useDispatch","isFavorite","useSelector","state","favorites","ids","includes","_jsx","Tippy","content","children","FontAwesomeIcon","size","className","onClick","window","confirm","concat","removeFromFavorites","addToFavorites","toggleFavorite","icon","_faStar2","_faStar","getMovieDetails","data","detailsData","label","value","Actors","Awards","BoxOffice","Country","DVD","Director","Genre","Language","Metascore","Production","Rated","Released","Runtime","Type","Website","Writer","Year","imdbID","imdbRating","imdbVotes","Plot","map","item","index","_jsxs","MovieDetails","styled","div","_templateObject","_taggedTemplateLiteral","props","theme","color","whiteTransparent75","device","m","MoviePoster","_templateObject2","MovieTitle","_templateObject3","MovieCardWrapper","_templateObject4","backgroundLite","withTheme","d","src","Poster","alt","Title","FavoriteMovie","skeleton","Spin","useParams","_useState","useState","_useState2","_slicedToArray","setData","useEffect","fetchData","_asyncToGenerator","_regeneratorRuntime","mark","_callee","apiUrl","_yield$axios$get","_data","wrap","_context","prev","next","process","axios","get","sent","t0","console","error","stop","apply","arguments","MovieCardDetail"],"sourceRoot":""}